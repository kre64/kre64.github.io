{"version":3,"sources":["components/Field.js","components/Languages.js","components/Translation.js","App.js","reportWebVitals.js","index.js"],"names":["label","value","onChange","className","e","target","LANGUAGES","Languages","language","onLanguageChange","undefined","languageConfig","find","l","Error","useState","open","setOpen","onClick","map","i","href","onSelect","doTranslation","input","languageCode","cancelToken","a","axios","post","q","token","data","translations","translatedText","text","translated","setTranslated","useEffect","CancelToken","source","then","cancel","err","App","setLanguage","setText","Field","Translation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbc7b78d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default ({ label, value, onChange }) => {\r\n  return (\r\n    <div>\r\n      <label>{label}</label>\r\n      <input\r\n        className=\"input\"\r\n        value={value}\r\n        onChange={e => onChange(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nconst LANGUAGES = [\r\n\t{ label: \"Afrikaans\", value: \"af\" },\r\n\t{ label: \"Arabic\", value: \"ar\" },\r\n\t{ label: \"French\", value: \"fr\" },\r\n\t{ label: \"Hindi\", value: \"hi\" },\r\n\t{ label: \"Japanese\", value: \"ja\" },\r\n\t{ label: \"Portuguese\", value: \"pt\" },\r\n\t{ label: \"Russian\", value: \"ru\" },\r\n\t{ label: \"Simplified Chinese\", value: \"zh-CN\" },\r\n\t{ label: \"Spanish\", value: \"es\" },\r\n\t{ label: \"Swahili\", value: \"sw\" },\r\n\t{ label: \"Thai\", value: \"th\" },\r\n];\r\n\r\nconst Languages = ({ language, onLanguageChange }) => {\r\n\tif (language === undefined) {\r\n\t\tlanguage = \"es\";\r\n\t}\r\n\tconst languageConfig = LANGUAGES.find((l) => l.value === language);\r\n\tif (!languageConfig) {\r\n\t\tthrow new Error(`Unknown language code '${language}'`);\r\n\t}\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\tconst onSelect = (language) => {\r\n\t\tsetOpen(false);\r\n\t\tonLanguageChange(language);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label className=\"label\">Select Language</label>\r\n\t\t\t<div className={`dropdown ${open && \"is-active\"}`}>\r\n\t\t\t\t<div className=\"dropdown-trigger\">\r\n\t\t\t\t\t<button className=\"button\" onClick={() => setOpen(!open)}>\r\n\t\t\t\t\t\t<span>{languageConfig.label}</span>\r\n\t\t\t\t\t\t<span className=\"icon is-small\">\r\n\t\t\t\t\t\t\t<i className=\"fas fa-angle-down\" />\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"dropdown-menu\">\r\n\t\t\t\t\t<div className=\"dropdown-content\">\r\n\t\t\t\t\t\t{LANGUAGES.map(({ label, value, i }) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<a\r\n                  href=\"#\"\r\n                  key={i}\r\n\t\t\t\t\t\t\t\t\tonClick={() => onSelect(value)}\r\n\t\t\t\t\t\t\t\t\tclassName=\"dropdown-item\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{label}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Languages;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst doTranslation = async (input, languageCode, cancelToken) => {\r\n  try {\r\n    const { data } = await axios.post(\r\n      \"https://translation.googleapis.com/language/translate/v2?key=AIzaSyCf0Xy0OnhxlduyEt3K8zP-sOuu-l_u6uA\",\r\n      {\r\n        q: input,\r\n        target: languageCode\r\n      },\r\n      { cancelToken: cancelToken.token }\r\n    );\r\n\r\n    return data.data.translations[0].translatedText;\r\n  } catch (err) {\r\n    return \"\";\r\n  }\r\n};\r\n\r\nexport default ({ language, text }) => {\r\n  const [translated, setTranslated] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!text) {\r\n      return;\r\n    }\r\n\r\n    const cancelToken = axios.CancelToken.source();\r\n\r\n    doTranslation(text, language, cancelToken).then(setTranslated);\r\n\r\n    return () => {\r\n      try {\r\n        cancelToken.cancel();\r\n      } catch (err) {}\r\n    };\r\n  }, [text, language]);\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"label\">Output</label>\r\n      <h1 className=\"title\">{translated}</h1>\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Field from \"./components/Field\";\nimport Languages from \"./components/Languages\";\nimport Translation from \"./components/Translation\";\n\nfunction App() {\n\tconst [language, setLanguage] = useState(\"ru\");\n\tconst [text, setText] = useState(\"\");\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Field label=\"Enter text\" onChange={setText} value={text} />\n\t\t\t<Languages language={language} onLanguageChange={setLanguage} />\n      <Translation text={text} language={language} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}